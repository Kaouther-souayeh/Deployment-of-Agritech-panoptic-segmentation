name: Python app
on:
  push:
    branches: [ "V0.01" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest    #the server that github available for the workflow

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.7
        uses: actions/setup-python@v3
        with:
          python-version: "3.7"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip \
          && if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest
      - name: Test with pytest
        run: |
          pytest

  build-image:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6.2
        with:
          image: kaouthersouayeh/panoptic_images
          tags: v0.01
          registry: docker.io
          dockerfile: Containerization/Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
  buildToAKS:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code 
        uses: actions/checkout@v3
      - name: ACR build
        id: build-push-acr
        uses: azure/acr-build@v1
        with:
          service_principal: ${{ secrets.AZURE_CLIENT_ID }}
          service_principal_password: ${{ secrets.SERVICE_PRINCIPAL_PASSWORD }}
          tenant: ${{ secrets.AZURE_TENANT_ID }}
          registry: ${{ secrets.REGISTRY }}
          repository: ${{ secrets.REPOSITORY }}
          image:  panoptic-segmentation-v1
          tag: ${{ github.sha }}
      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ secrets.RESOURCE_GROUP }}' 
          cluster-name: '${{ secrets.CLUSTER_NAME }}'
      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3
      - name: Deploy to AKS
        id: deploy-aks
        uses: Azure/k8s-deploy@v4
        with:
          namespace: 'default'
          manifests: |
             AKS.yaml
          images: '${{ secrets.registry }}.azurecr.io/${{ secrets.repository }}/panoptic-segmentation-v1:${{ github.sha }}'
          pull-images: false 